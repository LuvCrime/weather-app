[{"C:\\Users\\Анатолий\\Desktop\\weather-app\\src\\index.js":"1","C:\\Users\\Анатолий\\Desktop\\weather-app\\src\\reportWebVitals.js":"2","C:\\Users\\Анатолий\\Desktop\\weather-app\\src\\Components\\App.js":"3","C:\\Users\\Анатолий\\Desktop\\weather-app\\src\\Redux\\Store.js":"4","C:\\Users\\Анатолий\\Desktop\\weather-app\\src\\Redux\\Reducer.js":"5","C:\\Users\\Анатолий\\Desktop\\weather-app\\src\\Redux\\Actions.js":"6"},{"size":636,"mtime":1608633458394,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"8"},{"size":6265,"mtime":1608665645656,"results":"10","hashOfConfig":"8"},{"size":203,"mtime":1608665613592,"results":"11","hashOfConfig":"8"},{"size":645,"mtime":1608665609274,"results":"12","hashOfConfig":"8"},{"size":438,"mtime":1608665602914,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"oq5qg3",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"C:\\Users\\Анатолий\\Desktop\\weather-app\\src\\index.js",[],["28","29"],"C:\\Users\\Анатолий\\Desktop\\weather-app\\src\\reportWebVitals.js",[],"C:\\Users\\Анатолий\\Desktop\\weather-app\\src\\Components\\App.js",["30","31"],"import AppModules from \"./AppModules.module.css\";\nimport React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearchLocation } from \"@fortawesome/free-solid-svg-icons\";\nimport { connect } from \"react-redux\";\nimport { addData, addDataDailyWeather } from \"../Redux/Actions\";\nimport Loader from \"react-loader-spinner\";\nconst autoBind = require(\"auto-bind\");\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n    };\n    autoBind(this);\n  }\n\n  componentDidMount() {\n    this.getCity(\"moscow\");\n  }\n\n  getDailyWeather(lat, lon) {\n    this.setState({\n      loading: true,\n    });\n    const dataUrlWeeks = `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&&appid=eb93e97d16b687445b44bc92192ea7bb&units=metric`;\n    fetch(dataUrlWeeks, {\n      method: \"GET\",\n    })\n      .then((response) => {\n        return response.json();\n      })\n      .then((dataDailyWeather) => {\n        function timeConverter(UNIX_timestamp) {\n          var a = new Date(UNIX_timestamp * 1000);\n          var months = [\n            \"Jan\",\n            \"Feb\",\n            \"Mar\",\n            \"Apr\",\n            \"May\",\n            \"Jun\",\n            \"Jul\",\n            \"Aug\",\n            \"Sep\",\n            \"Oct\",\n            \"Nov\",\n            \"Dec\",\n          ];\n\n          var days = [\n            \"Sunday\",\n            \"Monday\",\n            \"Tuesday\",\n            \"Wednesday\",\n            \"Thursday\",\n            \"Friday\",\n            \"Saturday\",\n          ];\n          var day = days[a.getDay()];\n          var year = a.getFullYear();\n          var month = months[a.getMonth()];\n          var date = a.getDate();\n          var time = date + \" \" + month + \" \" + year + \" \" + day;\n          return time;\n        }\n\n        var weekWeather = dataDailyWeather.daily.slice(1).map((el) => {\n          return { temp: el.temp.day, day: timeConverter(el.dt) };\n        });\n\n        this.props.addDataDailyWeather(weekWeather);\n\n        this.setState({\n          loading: false,\n        });\n      })\n      .catch((err) => {\n        console.error(err);\n        this.setState({\n          loading: false,\n        });\n      });\n  }\n\n  getCity(cityName) {\n    this.setState({\n      loading: true,\n    });\n    const dataUrl = `http://api.openweathermap.org/data/2.5/weather?q=${cityName}&appid=eb93e97d16b687445b44bc92192ea7bb&units=metric`;\n    fetch(dataUrl, {\n      method: \"GET\",\n    })\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        console.log(data.weather[0].icon);\n        this.props.addData(\n          data.name,\n          data.main.temp,\n          data.weather[0].description,\n          data.main.temp_min,\n          data.main.temp_max,\n          data.coord.lat,\n          data.coord.lon,\n          data.weather[0].icon\n        );\n        this.getDailyWeather(data.coord.lat, data.coord.lon);\n        this.setState({\n          loading: false,\n        });\n      })\n      .catch((err) => {\n        console.error(err);\n        this.setState({\n          loading: false,\n        });\n      });\n  }\n\n  onInputOnChange(e) {\n    var currVal = e.target.value;\n    this.setState({\n      name: currVal,\n    });\n  }\n\n  onSearchClick() {\n    this.getCity(this.state.name);\n    this.setState({\n      name: \"\",\n    });\n  }\n\n  render() {\n    const img = `http://openweathermap.org/img/wn/${this.props.icon}@2x.png`;\n\n    String.prototype.capitalize = function () {\n      return this.charAt(0).toUpperCase() + this.slice(1);\n    };\n    if (this.state.loading && !this.props.name) {\n      return (\n        <div className={AppModules.loader}>\n          <Loader\n            type=\"Oval\"\n            color=\"#515ada\"\n            height={80}\n            width={80}\n            timeout={3000}\n          />\n        </div>\n      );\n    } else {\n      return (\n        <div className={AppModules.App}>\n          <div className={AppModules.wrapper}>\n            <div className={AppModules.weatherInfo}>\n              <div className={AppModules.search}>\n                <input\n                  className={AppModules.textField}\n                  value={this.state.name}\n                  onChange={this.onInputOnChange}\n                  placeholder=\"Enter a city\"\n                ></input>\n                <div className={AppModules.icon} onClick={this.onSearchClick}>\n                  <FontAwesomeIcon icon={faSearchLocation} />\n                </div>\n              </div>\n              <div className={AppModules.wrapperWeather}>\n                <div className={AppModules.name}>{this.props.name}</div>\n                <div className={AppModules.img}>\n                  <img src={img} />\n                </div>\n                <div className={AppModules.cloud}>\n                  {this.props.weather.capitalize()}\n                </div>\n\n                <div className={AppModules.degree}>\n                  {Math.round(this.props.temp)}\n                </div>\n                <div className={AppModules.extraWeatherInfo}>\n                  <div className={AppModules.min}>\n                    Min: {Math.floor(this.props.tempMin)}\n                  </div>\n                  <span>,</span>\n                  <div className={AppModules.max}>\n                    Max: {Math.ceil(this.props.tempMax)}\n                  </div>\n                </div>\n              </div>\n              {this.props.week && (\n                <div className={AppModules.dayOftheWeek}>\n                  {this.props.week.map((item) => {\n                    return (\n                      <div key={item.day} className={AppModules.weekWeather}>\n                        <div className={AppModules.day}>{item.day}</div>{\" \"}\n                        <div className={AppModules.temp}>\n                          {Math.round(item.temp)}\n                        </div>\n                      </div>\n                    );\n                  })}\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return state;\n};\n\nconst mapDispatchToProps = {\n  addData: addData,\n  addDataDailyWeather: addDataDailyWeather,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","C:\\Users\\Анатолий\\Desktop\\weather-app\\src\\Redux\\Store.js",[],"C:\\Users\\Анатолий\\Desktop\\weather-app\\src\\Redux\\Reducer.js",[],"C:\\Users\\Анатолий\\Desktop\\weather-app\\src\\Redux\\Actions.js",[],{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":140,"column":5,"nodeType":"38","messageId":"39","endLine":142,"endColumn":6},{"ruleId":"40","severity":1,"message":"41","line":174,"column":19,"nodeType":"42","endLine":174,"endColumn":36},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"no-extend-native","String prototype is read only, properties should not be added.","AssignmentExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]