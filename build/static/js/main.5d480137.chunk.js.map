{"version":3,"sources":["Components/AppModules.module.css","Components/App.js","Redux/Actions.js","reportWebVitals.js","Redux/Reducer.js","Redux/Store.js","index.js"],"names":["module","exports","autoBind","require","App","props","state","loading","suggest","this","getCity","lat","lon","setState","dataUrlWeeks","fetch","method","then","response","json","dataDailyWeather","timeConverter","UNIX_timestamp","a","Date","day","getDay","year","getFullYear","month","getMonth","getDate","weekWeather","daily","slice","map","el","temp","dt","addDataDailyWeather","catch","err","console","error","cityName","dataUrl","data","log","weather","icon","addData","name","main","description","temp_min","temp_max","coord","getDailyWeather","e","currVal","target","value","mapped","window","filter","city","toLowerCase","startsWith","img","String","prototype","capitalize","charAt","toUpperCase","className","AppModules","loader","type","color","height","width","timeout","wrapper","weatherInfo","suggestList","search","textField","onChange","onInputOnChange","placeholder","onClick","onSearchClick","faSearchLocation","wrapperWeather","src","cloud","degree","Math","round","extraWeatherInfo","min","floor","tempMin","max","ceil","tempMax","week","dayOftheWeek","item","React","Component","mapDispatchToProps","payload","connect","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","reducer","action","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5d480137.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"AppModules_App__3M2lg\",\"wrapper\":\"AppModules_wrapper__1LyVa\",\"weatherInfo\":\"AppModules_weatherInfo__2izHt\",\"extraWeatherInfo\":\"AppModules_extraWeatherInfo__2hdqI\",\"name\":\"AppModules_name__Qoyi6\",\"degree\":\"AppModules_degree__3Al0y\",\"textField\":\"AppModules_textField__1bVl2\",\"search\":\"AppModules_search__2L6Fe\",\"icon\":\"AppModules_icon__3V4Fo\",\"min\":\"AppModules_min__1uPz9\",\"max\":\"AppModules_max__1sSiT\",\"cloud\":\"AppModules_cloud__h4OPK\",\"wrapperWeather\":\"AppModules_wrapperWeather__Zw0jv\",\"loader\":\"AppModules_loader__1ooBM\",\"secondLoading\":\"AppModules_secondLoading__VKdd5\",\"dayOftheWeek\":\"AppModules_dayOftheWeek__3td_-\",\"temp\":\"AppModules_temp__2zCut\",\"day\":\"AppModules_day__1mca1\",\"suggestList\":\"AppModules_suggestList__rC0Ms\",\"suggest\":\"AppModules_suggest__7zHF0\",\"weekWeather\":\"AppModules_weekWeather__3hxg_\",\"img\":\"AppModules_img__3yxYz\",\"App-logo\":\"AppModules_App-logo__3VHtv\",\"App-logo-spin\":\"AppModules_App-logo-spin__2R1x4\"};","import AppModules from \"./AppModules.module.css\";\nimport React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearchLocation } from \"@fortawesome/free-solid-svg-icons\";\nimport { connect } from \"react-redux\";\nimport { addData, addDataDailyWeather } from \"../Redux/Actions\";\nimport Loader from \"react-loader-spinner\";\nconst autoBind = require(\"auto-bind\");\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      suggest: ''\n    };\n    autoBind(this);\n  }\n\n  componentDidMount() {\n    this.getCity(\"moscow\");\n  }\n\n  getDailyWeather(lat, lon) {\n    this.setState({\n      loading: true,\n    });\n    const dataUrlWeeks = `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&&appid=eb93e97d16b687445b44bc92192ea7bb&units=metric`;\n    fetch(dataUrlWeeks, {\n      method: \"GET\",\n    })\n      .then((response) => {\n        return response.json();\n      })\n      .then((dataDailyWeather) => {\n        function timeConverter(UNIX_timestamp) {\n          var a = new Date(UNIX_timestamp * 1000);\n          var months = [\n            \"Jan\",\n            \"Feb\",\n            \"Mar\",\n            \"Apr\",\n            \"May\",\n            \"Jun\",\n            \"Jul\",\n            \"Aug\",\n            \"Sep\",\n            \"Oct\",\n            \"Nov\",\n            \"Dec\",\n          ];\n\n          var days = [\n            \"Sunday\",\n            \"Monday\",\n            \"Tuesday\",\n            \"Wednesday\",\n            \"Thursday\",\n            \"Friday\",\n            \"Saturday\",\n          ];\n          var day = days[a.getDay()];\n          var year = a.getFullYear();\n          var month = months[a.getMonth()];\n          var date = a.getDate();\n          var time = date + \" \" + month + \" \" + year + \" \" + day;\n          return time;\n        }\n\n        var weekWeather = dataDailyWeather.daily.slice(1).map((el) => {\n          return { temp: el.temp.day, day: timeConverter(el.dt) };\n        });\n\n        this.props.addDataDailyWeather(weekWeather);\n\n        this.setState({\n          loading: false,\n        });\n      })\n      .catch((err) => {\n        console.error(err);\n        this.setState({\n          loading: false,\n        });\n      });\n  }\n\n  getCity(cityName) {\n    this.setState({\n      loading: true,\n    });\n    const dataUrl = `http://api.openweathermap.org/data/2.5/weather?q=${cityName}&appid=eb93e97d16b687445b44bc92192ea7bb&units=metric`;\n    fetch(dataUrl, {\n      method: \"GET\",\n    })\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        console.log(data.weather[0].icon);\n        this.props.addData(\n          data.name,\n          data.main.temp,\n          data.weather[0].description,\n          data.main.temp_min,\n          data.main.temp_max,\n          data.coord.lat,\n          data.coord.lon,\n          data.weather[0].icon\n        );\n        this.getDailyWeather(data.coord.lat, data.coord.lon);\n        this.setState({\n          loading: false,\n        });\n      })\n      .catch((err) => {\n        console.error(err);\n        this.setState({\n          loading: false,\n        });\n      });\n  }\n\n\n  onInputOnChange(e) {\n    var currVal = e.target.value;\n    this.setState({\n      name: currVal,\n    });\n    var filtedCities = window.suggest.filter((city) => {\n      return(city.toLowerCase().startsWith(currVal.toLowerCase()))\n    });\n\n    var mapped = filtedCities.map(city => {\n      return <div>{city}</div>\n  })\n\nconsole.log(mapped)\n\n    this.setState({\n      suggest: mapped.slice(0, 9)\n    })\n  \n}\n\n  onSearchClick() {\n    this.getCity(this.state.name);\n    this.setState({\n      name: \"\",\n    });\n  }\n\n  render() {\n\n    const img = `http://openweathermap.org/img/wn/${this.props.icon}@2x.png`;\n\n    String.prototype.capitalize = function () {\n      return this.charAt(0).toUpperCase() + this.slice(1);\n    };\n    \n    if (this.state.loading && !this.props.name) {\n      return (\n        <div className={AppModules.loader}>\n          <Loader\n            type=\"Oval\"\n            color=\"#515ada\"\n            height={80}\n            width={80}\n            timeout={3000}\n          />\n        </div>\n      );\n    } else {\n      return (\n        <div className={AppModules.App}>\n          <div className={AppModules.wrapper}>\n            <div className={AppModules.weatherInfo}>\n              <div className={AppModules.suggestList}>\n              <div className={AppModules.search}>\n                <input\n                  className={AppModules.textField}\n                  value={this.state.name}\n                  onChange={this.onInputOnChange}\n                  placeholder=\"Enter a city\"\n                ></input>\n                <div className={AppModules.icon} onClick={this.onSearchClick}>\n                  <FontAwesomeIcon icon={faSearchLocation} />\n                </div>\n                </div>\n                {this.state.suggest &&(\n                <div className={AppModules.suggest}>{this.state.suggest}</div>\n               )}\n              </div>\n              <div className={AppModules.wrapperWeather}>\n                <div className={AppModules.name}>{this.props.name}</div>\n                <div className={AppModules.img}>\n                  <img src={img} />\n                </div>\n                <div className={AppModules.cloud}>\n                  {this.props.weather.capitalize()}\n                </div>\n\n                <div className={AppModules.degree}>\n                  {Math.round(this.props.temp)}\n                </div>\n                <div className={AppModules.extraWeatherInfo}>\n                  <div className={AppModules.min}>\n                    Min: {Math.floor(this.props.tempMin)}\n                  </div>\n                  <span>,</span>\n                  <div className={AppModules.max}>\n                    Max: {Math.ceil(this.props.tempMax)}\n                  </div>\n                </div>\n              </div>\n              {this.props.week && (\n                <div className={AppModules.dayOftheWeek}>\n                  {this.props.week.map((item) => {\n                    return (\n                      <div key={item.day} className={AppModules.weekWeather}>\n                        <div className={AppModules.day}>{item.day}</div>{\" \"}\n                        <div className={AppModules.temp}>\n                          {Math.round(item.temp)}\n                        </div>\n                      </div>\n                    );\n                  })}\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return state;\n};\n\nconst mapDispatchToProps = {\n  addData: addData,\n  addDataDailyWeather: addDataDailyWeather,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","export const addData = (\r\n  name,\r\n  temp,\r\n  weather,\r\n  tempMin,\r\n  tempMax,\r\n  lat,\r\n  lon,\r\n  icon\r\n) => {\r\n  return {\r\n    type: \"ADD_DATA\",\r\n    payload: {\r\n      name,\r\n      temp,\r\n      weather,\r\n      tempMin,\r\n      tempMax,\r\n      lat,\r\n      lon,\r\n      icon,\r\n    },\r\n  };\r\n};\r\n\r\nexport const addDataDailyWeather = (week) => {\r\n  return {\r\n    type: \"ADD_DATA_DAILY_WEATHER\",\r\n    payload: {\r\n      week,\r\n    },\r\n  };\r\n};\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_DATA\":\r\n      return {\r\n        name: action.payload.name,\r\n        temp: action.payload.temp,\r\n        weather: action.payload.weather,\r\n        tempMin: action.payload.tempMin,\r\n        tempMax: action.payload.tempMax,\r\n        lat: action.payload.lat,\r\n        lon: action.payload.lon,\r\n        icon: action.payload.icon,\r\n      };\r\n    case \"ADD_DATA_DAILY_WEATHER\":\r\n      return {\r\n        ...state,\r\n        week: action.payload.week,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import { createStore } from \"redux\";\r\nimport reducer from \"./Reducer\";\r\n\r\nexport let store = createStore(\r\n  reducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from \"react-redux\";\nimport { store } from \"./Redux/Store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store} >\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}